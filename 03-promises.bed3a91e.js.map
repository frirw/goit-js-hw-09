{"mappings":"AAAaA,SAASC,cAAc,SAC/BC,iBAAiB,UAAUC,IAC9BA,EAAMC,iBAEN,MAAMC,EAAQC,OAAOH,EAAMI,OAAOC,SAASC,MAAMC,OAC3CC,EAAOL,OAAOH,EAAMI,OAAOC,SAASG,KAAKD,OACzCE,EAASN,OAAOH,EAAMI,OAAOC,SAASI,OAAOF,OAEnD,SAASG,EAAcC,EAAUL,GAC/B,OAAO,IAAIM,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEF,E,MAAUL,IAEpBQ,EAAO,C,SAAEH,E,MAAUL,GAAQ,GAE5BA,EAAM,G,CAIb,IAAK,IAAIa,EAAI,EAAGA,EAAIV,EAAQU,GAAK,EAC/BT,EAAcS,EAAGjB,EAAQM,EAAOW,GAC7BC,MAAK,EAACT,SAAEA,EAAQL,MAAEA,MACjBe,QAAQC,IAAI,uBAAqBX,QAAiBL,MAAU,IAE7DiB,OAAM,EAACZ,SAAEA,EAAQL,MAAEA,MAClBe,QAAQC,IAAI,sBAAoBX,QAAeL,MAAU,GACzD","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\nform.addEventListener('submit', event => {\n  event.preventDefault();\n\n  const delay = Number(event.target.elements.delay.value);\n  const step = Number(event.target.elements.step.value);\n  const amount = Number(event.target.elements.amount.value);\n\n  function createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay);\n    });\n  }\n\n  for (let i = 0; i < amount; i += 1) {\n    createPromise(i, delay + step * i)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n});\n"],"names":["document","querySelector","addEventListener","event","preventDefault","delay1","Number","target","elements","delay","value","step","amount","createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","i","then","console","log","catch"],"version":3,"file":"03-promises.bed3a91e.js.map"}